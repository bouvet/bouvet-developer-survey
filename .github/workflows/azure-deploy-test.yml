name: Build and Push Test

on:
  # workflow_dispatch:
  # workflow_call:
  # pull_request:
  push:  
    branches:
      - 'feat/**'
    # paths:
    #   - 'Bouvet.Developer.Survey.Backend/**'  
      
env:
  DOTNET_VERSION: "8.0"
  IMAGE_TAG: ${{ github.sha }}

jobs:

  deploy-azure-resources-test:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log into Azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS_TEST }}

    - name: Deploy Azure Resources test
      uses: azure/arm-deploy@v2
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        resourceGroupName: ${{ secrets.AZURE_RG_TEST }}
        template: infra/main-test.bicep
        parameters: "sqlServerPassword=${{ secrets.SQL_SERVER_PASSWORD_TEST }}"
        failOnStdErr: false    

  build:
    runs-on: ubuntu-latest
    name: Build üõ†Ô∏è
    needs: deploy-azure-resources-test
    container:
      image: mcr.microsoft.com/dotnet/sdk:8.0
    steps:
      - name: Checkout project
        uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      
      - name: Dotnet restore
        working-directory: ./Bouvet.Developer.Survey.Backend
        run: dotnet restore Bouvet.Developer.Survey.Backend.generated.sln
      
      - name: Build with dotnet
        working-directory: ./Bouvet.Developer.Survey.Backend
        run: dotnet build Bouvet.Developer.Survey.Backend.generated.sln --configuration Release --no-restore
                    
      - name: Publish
        working-directory: ./Bouvet.Developer.Survey.Backend
        run: dotnet publish Bouvet.Developer.Survey.Backend.generated.sln --configuration Release --no-build

  test:
    runs-on: ubuntu-latest
    needs: build
    name: Test üß™
    container:
      image: mcr.microsoft.com/dotnet/sdk:8.0

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Dotnet restore
        working-directory: ./Bouvet.Developer.Survey.Backend
        run: dotnet restore Bouvet.Developer.Survey.Backend.generated.sln

      - name: Build with dotnet
        working-directory: ./Bouvet.Developer.Survey.Backend
        run: dotnet build Bouvet.Developer.Survey.Backend.generated.sln --configuration Release --no-restore

      - name: Test with dotnet
        working-directory: ./Bouvet.Developer.Survey.Backend
        run: dotnet test
  
  build-container-image:
    runs-on: ubuntu-latest
    needs: [build, test]
    
    defaults:
      run:
        working-directory: ./Bouvet.Developer.Survey.Backend
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@main

      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_TEST }}

      - name: Get ACR name
        id: getacrname
        run: |
          acrName=$(az acr list --resource-group ${{ secrets.AZURE_RG_TEST }} --query "[0].name" -o tsv)
          echo "::set-output name=acrName::$acrName"

      - name: Get ACR Credentials
        id: getacrcreds
        run: |
          loginServer=$(az acr list --resource-group ${{ secrets.AZURE_RG_TEST }} --query "[0].loginServer" -o tsv)
          loginName=$(az acr credential show -n ${{ steps.getacrname.outputs.acrName }} --resource-group ${{ secrets.AZURE_RG_TEST }} --query username -o tsv)
          password=$(az acr credential show -n ${{ steps.getacrname.outputs.acrName }} --resource-group ${{ secrets.AZURE_RG_TEST }} --query "passwords[0].value" -o tsv)
          echo "::set-output name=loginServer::$loginServer"
          echo "::set-output name=loginName::$loginName"
          echo "::set-output name=password::$password"

      - name: 'Build and Push API Image to ACR'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ steps.getacrcreds.outputs.loginServer }}
          username: ${{ steps.getacrname.outputs.acrName }}
          password: ${{ steps.getacrcreds.outputs.password }}
      - run: |
          docker build . -t ${{ steps.getacrcreds.outputs.loginServer }}/backend-image:${{ github.sha }}
          docker push ${{ steps.getacrcreds.outputs.loginServer }}/backend-image:${{ github.sha }}
          echo "::set-output name=image_tag::${{ github.sha }}"
          echo "::set-output name=acr_name::${{ steps.getacrname.outputs.acrName }}"
        
  Update-Container-App:
    needs: build-container-image
    runs-on: ubuntu-latest
    name: Deploy Azure Container App üöÄ

    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@main
        
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_TEST }}

      - name: 'Update Azure Container App'
        run: |
          az containerapp update \
          --name bds-test-containerapp \
          --resource-group ${{ secrets.AZURE_RG_TEST }} \
          --image bouvetsurveycontainerregistry.azurecr.io/backend-image:${{ github.sha }} \
          --set-env-vars "ASPNETCORE_HTTP_PORTS=5001"
  

